#include <bits/stdc++.h>
using namespace std;

int kadane(vector<int> &arr) {
    int currentSum = arr[0];
    int maxSum = arr[0];

    for (int i = 1; i < arr.size(); i++) {
        // Either start new subarray at arr[i], or extend previous one
        currentSum = max(arr[i], currentSum + arr[i]);
        // Track the best sum seen so far
        maxSum = max(maxSum, currentSum);
    }

    return maxSum;
}

int main() {
    vector<int> arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    cout << "Maximum Subarray Sum = " << kadane(arr) << endl;
    return 0;
}
